[gcode_macro START_PRINT]
gcode:
  BED_MESH_CLEAR
  #Get Bed and Extruder temperature from Slicer GCode
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}

  #Preheatbed                   
  M140 S{BED_TEMP}  

  #Home
  G28

  #Load the default bed mesh
  # BED_MESH_PROFILE LOAD={BED_TEMP|int}      

  #Heat bed
  M190 S{BED_TEMP}        
  # pre heat nozzle during mesh calibrate
  # M104 S{EXTRUDER_TEMP} T0 
  M104 S150 T0
  # Mesh the print surface
  BED_MESH_CALIBRATE METHOD=rapid_scan ADAPTIVE=1 ADAPTIVE_MARGIN=5 #PROFILE=beforePrint # ADAPTIVE=1
  #BED_MESH_PROFILE LOAD=default #beforePrint
  #M420 # load mesh
  # heat extruder
  M109 S{EXTRUDER_TEMP} T0         
  
  LINE_PURGE

[gcode_macro END_PRINT]
gcode:
  #Get Printer built volume dimensions
  {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
  {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}

  #Fix-up extruder
  G91                                            
  #G1 E-2 F2700                                    
  #G1 E-1.5 Z0.2 F2400
  G1 E-10 F2700 # retract 10 to prevent ooze
  #G1 X5 Y5 F6000                               
  #G1 Z10                                     
  G90                                        

  #Present print
  G1 Z{printer.toolhead.position.z + 10} F600
  G1 X{X_MAX / 2} Y{Y_MAX} F6000
  M106 S0                                      
  M104 S0                                       
  M140 S0                                 

  #Disable Steppers
  M84 X Y E

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state
